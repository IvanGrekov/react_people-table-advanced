{"version":3,"sources":["components/Navigation/Navigation.jsx","components/HomePage/HomePage.jsx","scripts/PeopleApi.js","components/NewPerson/NewPerson.jsx","components/PeopleTable/Father.jsx","components/PeopleTable/Mother.jsx","components/PeopleTable/TableRow.jsx","components/PeopleTable/personProps.js","components/PeopleTable/Table.jsx","components/PeopleTable/PeopleTable.jsx","scripts/debounce.js","components/PageNotFound/PageNotFound.jsx","App.jsx","index.jsx"],"names":["Navigation","React","memo","className","to","exact","activeClassName","HomePage","api","getUsers","url","options","fetch","query","then","response","json","catch","console","log","NewPerson","people","onAddPerson","initialWomenList","filter","person","sex","initialMenList","useState","women","setWomen","men","setMen","name","setName","nameValidation","setNameValidation","setSex","born","setBorn","died","setDied","diedValidation","setDiedValidation","motherName","setMotherName","fatherName","setFatherName","renderOption","key","slug","value","addPerson","toLowerCase","split","join","newUser","title","onSubmit","event","preventDefault","htmlFor","id","type","placeholder","required","onChange","validValue","replace","length","onSetName","target","checked","min","curentWomenList","woman","curentMenList","man","onSetBorn","disabled","age","onSetDied","map","Father","fatherSlug","search","useLocation","defaultProps","Mother","motherSlug","TableRow","PropTypes","shape","string","isRequired","number","father","object","mother","selectedSlug","isEven","classNames","Table","array","history","useHistory","location","searchParams","URLSearchParams","sorting","get","sortOrder","handleSort","set","delete","push","toString","visiblePeople","sort","prevPerson","currentPerson","localeCompare","prepareSortedList","find","human","onClick","index","peopleFromLocaleStorage","JSON","parse","localStorage","getItem","PeopleTable","withRouter","match","setPeople","searchValue","setSearchValue","activeInpute","setActiveInpute","useEffect","result","setItem","stringify","applyQuery","useCallback","func","delay","timer","clearTimeout","args","setTimeout","debounce","params","lowerQuery","includes","path","currentPeopleList","onFocus","onBlur","PageNotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5829efca.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Navigation.scss';\n\nexport const Navigation = React.memo(\n  () => (\n    <nav className=\"navigation\">\n      <ul className=\"navigation__list\">\n        <li className=\"navigation__item\">\n          <NavLink\n            to=\"/\"\n            exact\n            className=\"navigation__link\"\n            activeClassName=\"navigation__link--active\"\n          >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"navigation__item\">\n          <NavLink\n            to=\"/people\"\n            className=\"navigation__link\"\n            activeClassName=\"navigation__link--active\"\n          >\n            People\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  ),\n);\n","import React from 'react';\n\nimport './HomePage.scss';\n\nexport const HomePage = React.memo(\n  () => (\n    <h1 className=\"title\">Home Page</h1>\n  ),\n);\n","const api = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst query = (url, options = {}) => (\n  fetch(api, options)\n);\n\nexport const getUsers = () => (\n  query(api)\n    .then(response => response.json())\n    // eslint-disable-next-line no-console\n    .catch(console.log)\n);\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './NewPerson.scss';\n\nconst minBornYear = 1400;\n\nexport const NewPerson = ({ people, onAddPerson }) => {\n  const initialWomenList = people.filter(person => person.sex === 'f');\n  const initialMenList = people.filter(person => person.sex === 'm');\n\n  const [women, setWomen] = useState(initialWomenList);\n  const [men, setMen] = useState(initialMenList);\n  const [name, setName] = useState('');\n  const [nameValidation, setNameValidation] = useState(false);\n  const [sex, setSex] = useState('');\n  const [born, setBorn] = useState('');\n  const [died, setDied] = useState('');\n  const [diedValidation, setDiedValidation] = useState(false);\n  const [motherName, setMotherName] = useState('');\n  const [fatherName, setFatherName] = useState('');\n\n  const renderOption = person => (\n    <option key={person.slug} value={person.name}>\n      {person.name}\n    </option>\n  );\n\n  const onSetName = (value) => {\n    const validValue = value.replace(/[^`a-zа-я\\s]/gi, '');\n\n    if (value.length !== validValue.length) {\n      setNameValidation(true);\n    } else if (value.length === validValue.length && nameValidation) {\n      setNameValidation(false);\n    }\n\n    setName(validValue);\n  };\n\n  const onSetBorn = (value) => {\n    if (+value >= minBornYear) {\n      const curentWomenList = initialWomenList.filter(woman => (\n        +woman.died >= +value\n      ));\n\n      const curentMenList = initialMenList.filter(man => (\n        +man.died >= +value\n      ));\n\n      setWomen(curentWomenList);\n      setMen(curentMenList);\n    }\n\n    setBorn(value);\n  };\n\n  const onSetDied = (value) => {\n    const age = +value - +born;\n\n    if (age > 150) {\n      setDiedValidation(true);\n    } else if (age <= 150 && diedValidation) {\n      setDiedValidation(false);\n    }\n\n    setDied(value);\n  };\n\n  const clearFields = () => {\n    setName('');\n    setNameValidation(false);\n    setSex('');\n    setBorn('');\n    setDied('');\n    setMotherName('');\n    setFatherName('');\n  };\n\n  const addPerson = () => {\n    const slug = name.toLowerCase().split(' ').join('-') + born;\n\n    const newUser = {\n      name,\n      sex,\n      born: +born,\n      died: +died,\n      motherName,\n      fatherName,\n      slug,\n    };\n\n    clearFields();\n    onAddPerson(newUser);\n  };\n\n  return (\n    <div className=\"new-person\">\n      <h2 className=\"new-person__title\">\n        Add a new person\n\n        <Link\n          to=\"/people\"\n          className=\"new-person__form-closer\"\n          title=\"Close form\"\n        >\n          X\n        </Link>\n      </h2>\n\n      <form\n        className=\"new-person__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addPerson();\n        }}\n      >\n        <div className=\"new-person__form-item-wrapper\">\n          <label htmlFor=\"name\" className=\"new-person__label\">\n            Name\n          </label>\n\n          <input\n            id=\"name\"\n            className=\"new-person__input\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter the name\"\n            required\n            value={name}\n            onChange={event => onSetName(event.target.value)}\n          />\n\n          {nameValidation && (\n            <span className=\"new-person__validation\">\n              Only letters, spaces and ` are acceptable\n            </span>\n          )}\n        </div>\n\n        <div\n          className=\"\n            new-person__form-item-wrapper\n            new-person__form-item-wrapper--radio\n       \">\n          <div>\n            <label htmlFor=\"male\" className=\"new-person__label\">\n              Male\n            </label>\n\n            <input\n              id=\"male\"\n              className=\"new-person__input\"\n              type=\"radio\"\n              name=\"sex\"\n              value=\"m\"\n              required\n              checked={sex === 'm'}\n              onChange={(event) => {\n                setSex(event.target.value);\n                setNameValidation(false);\n              }}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"female\" className=\"new-person__label\">\n              Female\n            </label>\n\n            <input\n              id=\"female\"\n              className=\"new-person__input\"\n              type=\"radio\"\n              name=\"sex\"\n              value=\"f\"\n              checked={sex === 'f'}\n              onChange={(event) => {\n                setSex(event.target.value);\n                setNameValidation(false);\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"new-person__form-item-wrapper\">\n          <label htmlFor=\"born\" className=\"new-person__label\">\n            Year of birth\n          </label>\n\n          <input\n            id=\"born\"\n            className=\"new-person__input\"\n            type=\"number\"\n            name=\"born\"\n            placeholder=\"Enter the year of birth\"\n            min={minBornYear}\n            required\n            value={born}\n            onChange={(event) => {\n              onSetBorn(event.target.value);\n              setNameValidation(false);\n            }}\n          />\n        </div>\n\n        <div className=\"new-person__form-item-wrapper\">\n          <label htmlFor=\"died\" className=\"new-person__label\">\n            Year of death\n          </label>\n\n          <input\n            id=\"died\"\n            className=\"new-person__input\"\n            type=\"number\"\n            name=\"died\"\n            placeholder=\"Enter the year of death\"\n            min={born}\n            required\n            disabled={!born}\n            value={died}\n            onChange={(event) => {\n              onSetDied(event.target.value);\n              setNameValidation(false);\n            }}\n          />\n\n          {diedValidation && (\n            <span className=\"new-person__validation\">\n              Age mustn&apos;t be more than 150\n            </span>\n          )}\n        </div>\n\n        <div className=\"new-person__form-item-wrapper\">\n          <label htmlFor=\"mother\" className=\"new-person__label\">\n            Mother\n          </label>\n\n          <select\n            id=\"mother\"\n            className=\"new-person__input\"\n            name=\"mother\"\n            required\n            value={motherName}\n            onChange={(event) => {\n              setMotherName(event.target.value);\n              setNameValidation(false);\n            }}\n          >\n            <option value=\"\" disabled>Choose from existing people</option>\n\n            {women.map(renderOption)}\n          </select>\n        </div>\n\n        <div className=\"new-person__form-item-wrapper\">\n          <label htmlFor=\"father\" className=\"new-person__label\">\n            Father\n          </label>\n\n          <select\n            id=\"father\"\n            className=\"new-person__input\"\n            name=\"father\"\n            required\n            value={fatherName}\n            onChange={(event) => {\n              setFatherName(event.target.value);\n              setNameValidation(false);\n            }}\n          >\n            <option value=\"\" disabled>Choose from existing people</option>\n\n            {men.map(renderOption)}\n          </select>\n        </div>\n\n        <button\n          className=\"new-person__submit\"\n          type=\"submit\"\n          disabled={diedValidation}\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNewPerson.propTypes = {\n  people: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      sex: PropTypes.string.isRequired,\n      died: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onAddPerson: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const Father = React.memo(\n  ({ fatherName, fatherSlug }) => {\n    const { search } = useLocation();\n\n    if (fatherName && fatherSlug) {\n      return (\n        <Link\n          to={`/people/${fatherSlug}${search}#${fatherSlug}`}\n          className=\"people-section__table-link\"\n        >\n          {fatherName}\n        </Link>\n      );\n    }\n\n    if (fatherName) {\n      return (\n        <span className=\"people-section__table-lost-father\">\n          {fatherName}\n        </span>\n      );\n    }\n\n    return (\n      'unknown'\n    );\n  },\n);\n\nFather.propTypes = {\n  fatherName: PropTypes.string,\n  fatherSlug: PropTypes.string,\n};\n\nFather.defaultProps = {\n  fatherName: '',\n  fatherSlug: '',\n};\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const Mother = React.memo(\n  ({ motherName, motherSlug }) => {\n    const { search } = useLocation();\n\n    if (motherName && motherSlug) {\n      return (\n        <Link\n          to={`/people/${motherSlug}${search}#${motherSlug}`}\n          className=\"people-section__table-link\"\n        >\n          {motherName}\n        </Link>\n      );\n    }\n\n    if (motherName) {\n      return (\n        <span className=\"people-section__table-lost-mother\">\n          {motherName}\n        </span>\n      );\n    }\n\n    return (\n      'unknown'\n    );\n  },\n);\n\nMother.propTypes = {\n  motherName: PropTypes.string,\n  motherSlug: PropTypes.string,\n};\n\nMother.defaultProps = {\n  motherName: '',\n  motherSlug: '',\n};\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Father } from './Father';\nimport { Mother } from './Mother';\nimport { personProps } from './personProps';\n\nexport const TableRow = React.memo(\n  ({ person, selectedSlug, isEven }) => {\n    const {\n      name,\n      sex,\n      born,\n      died,\n      fatherName,\n      motherName,\n      slug,\n      father,\n      mother,\n    } = person;\n\n    const fatherSlug = father ? father.slug : '';\n    const motherSlug = mother ? mother.slug : '';\n\n    const { search } = useLocation();\n\n    return (\n      <tr\n        id={slug}\n        className={classNames(\n          'people-section__table-row',\n          {\n            'people-section__table-row--even': isEven,\n            'people-section__table-row--highlight--m':\n              selectedSlug === slug && sex === 'm',\n\n            'people-section__table-row--highlight--f':\n              selectedSlug === slug && sex === 'f',\n          },\n        )}\n      >\n        <td className=\"people-section__table-cell\">\n          <Link\n            to={`/people/${slug}${search}#${slug}`}\n            className=\"people-section__table-link\"\n          >\n            {name}\n          </Link>\n        </td>\n        <td\n          className=\"\n            people-section__table-cell\n            people-section__table-cell--align\n       \">\n          {sex}\n        </td>\n        <td\n          className=\"\n            people-section__table-cell\n            people-section__table-cell--align\n       \">\n          {born}\n        </td>\n        <td\n          className=\"\n            people-section__table-cell\n            people-section__table-cell--align\n       \">\n          {died}\n        </td>\n        <td\n          className={classNames(\n            'people-section__table-cell',\n            { 'people-section__table-cell--error': !fatherName },\n          )}\n        >\n          <Father fatherName={fatherName} fatherSlug={fatherSlug} />\n        </td>\n        <td\n          className={classNames(\n            'people-section__table-cell',\n            { 'people-section__table-cell--error': !motherName },\n          )}\n        >\n          <Mother motherName={motherName} motherSlug={motherSlug} />\n        </td>\n      </tr>\n    );\n  },\n);\n\nTableRow.propTypes = {\n  person: personProps.isRequired,\n  selectedSlug: PropTypes.string.isRequired,\n  isEven: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const personProps = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number,\n  fatherName: PropTypes.string,\n  motherName: PropTypes.string,\n  slug: PropTypes.string.isRequired,\n  father: PropTypes.object,\n  mother: PropTypes.object,\n});\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { TableRow } from './TableRow';\nimport { personProps } from './personProps';\n\nexport const Table = React.memo(\n  ({ people, selectedSlug }) => {\n    const sortByName = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.name.localeCompare(prevPerson.name)\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.name.localeCompare(currentPerson.name)\n      ));\n    };\n\n    const sortBySex = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.sex.localeCompare(prevPerson.sex)\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.sex.localeCompare(currentPerson.sex)\n      ));\n    };\n\n    const sortByBorn = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.born - prevPerson.born\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.born - currentPerson.born\n      ));\n    };\n\n    const sortByDied = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.died - prevPerson.died\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.died - currentPerson.died\n      ));\n    };\n\n    const addParents = array => (\n      [...array].map((person) => {\n        const father = array.find(human => human.name === person.fatherName);\n        const mother = array.find(human => human.name === person.motherName);\n\n        return {\n          ...person,\n          father,\n          mother,\n        };\n      })\n    );\n\n    const history = useHistory();\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const sorting = searchParams.get('sortBy') || '';\n    const sortOrder = searchParams.get('sortOrder') || '';\n\n    const handleSort = (value) => {\n      searchParams.set('sortBy', value);\n      searchParams.set('sortOrder', 'asc');\n\n      if (value === sorting) {\n        switch (sortOrder) {\n          case 'asc':\n            searchParams.set('sortOrder', 'desc');\n            break;\n\n          case 'desc':\n            searchParams.delete('sortBy');\n            searchParams.delete('sortOrder');\n            break;\n\n          default:\n            searchParams.set('sortOrder', 'asc');\n        }\n      }\n\n      return history.push({ search: `${searchParams.toString()}` });\n    };\n\n    const prepareSortedList = () => {\n      switch (sorting) {\n        case 'name':\n          return sortByName();\n\n        case 'sex':\n          return sortBySex();\n\n        case 'born':\n          return sortByBorn();\n\n        case 'died':\n          return sortByDied();\n\n        default:\n          return people;\n      }\n    };\n\n    const visiblePeople = addParents(prepareSortedList());\n\n    return (\n      <table className=\"people-section__table\">\n        <thead className=\"people-section__table-head\">\n          <tr className=\"people-section__table-head-row\">\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('name')}\n            >\n              Name\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'name' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'name' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('sex')}\n            >\n              Sex\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'sex' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'sex' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('born')}\n            >\n              Born\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'born' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'born' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('died')}\n            >\n              Died\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'died' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'died' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th className=\"people-section__table-subtitle\">\n              Father\n            </th>\n            <th className=\"people-section__table-subtitle\">\n              Mother\n            </th>\n          </tr>\n        </thead>\n\n        <tbody className=\"people-section__table-body\">\n          {visiblePeople.length !== 0 && visiblePeople.map((person, index) => (\n            <TableRow\n              key={person.slug}\n              person={person}\n              selectedSlug={selectedSlug || 'not assigned'}\n              isEven={(index % 2) === 0}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n\nTable.propTypes = {\n  people: PropTypes.arrayOf(\n    personProps,\n  ),\n  selectedSlug: PropTypes.string,\n};\n\nTable.defaultProps = {\n  people: [],\n  selectedSlug: '',\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  NavLink,\n  Route,\n  useHistory,\n  useLocation,\n  withRouter,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { debounce } from '../../scripts/debounce';\nimport { getUsers } from '../../scripts/PeopleApi';\nimport { NewPerson } from '../NewPerson';\nimport { Table } from './Table';\n\nimport './PeopleTable.scss';\n\nconst searchQueryDelay = 500;\nconst peopleFromLocaleStorage = JSON.parse(localStorage.getItem('people'));\n\nexport const PeopleTable = React.memo(\n  withRouter(\n    ({ match }) => {\n      const history = useHistory();\n      const location = useLocation();\n      const searchParams = new URLSearchParams(location.search);\n      const query = searchParams.get('query') || '';\n\n      const [people, setPeople] = useState(peopleFromLocaleStorage || []);\n      const [searchValue, setSearchValue] = useState(query);\n      const [activeInpute, setActiveInpute] = useState(false);\n\n      useEffect(() => {\n        if (people.length === 0) {\n          getUsers()\n            .then((result) => {\n              localStorage.setItem('people', JSON.stringify(result));\n              setPeople(result);\n            });\n        }\n      }, []);\n\n      const onAddPerson = (person) => {\n        const currentPeopleList = JSON.parse(localStorage.getItem('people'));\n\n        currentPeopleList.push(person);\n        localStorage.setItem('people', JSON.stringify(currentPeopleList));\n        setPeople(currentPeopleList);\n      };\n\n      const handleQueryChange = (value, params) => {\n        params.set('query', value);\n\n        if (value === '') {\n          params.delete('query');\n        }\n\n        return history.push({ search: `${params.toString()}` });\n      };\n\n      const applyQuery = useCallback(\n        debounce(handleQueryChange, searchQueryDelay),\n        [searchQueryDelay],\n      );\n\n      const visiblePeople = people.filter((person) => {\n        const lowerQuery = query.toLowerCase();\n\n        return person.name.toLowerCase().includes(lowerQuery)\n          || person.fatherName?.toLowerCase().includes(lowerQuery)\n          || person.motherName?.toLowerCase().includes(lowerQuery);\n      });\n\n      return (\n        <section className=\"people-section\">\n          <h2 className=\"people-section__title\">\n            People table\n          </h2>\n\n          <div className=\"people-section__add-person\">\n            <NavLink\n              to=\"/people/newPerson\"\n              className=\"people-section__add-person-button\"\n              activeClassName=\"people-section__add-person-button--hidden\"\n            >\n              Add a new person\n            </NavLink>\n\n            {people !== null && (\n              <Route path=\"/people/newPerson\">\n                <NewPerson people={people} onAddPerson={onAddPerson} />\n              </Route>\n            )}\n          </div>\n\n          <div className=\"people-section__search\">\n            <label\n              htmlFor=\"search-field\"\n              className=\"people-section__search-label\"\n            >\n              <h2 className=\"people-section__search-label-text\">\n                Find the person\n              </h2>\n\n              <div\n                className={classNames(\n                  'people-section__search-input-wrapper',\n                  {\n                    'people-section__search-input-wrapper--active':\n                      activeInpute,\n                  },\n                )}\n              >\n                <input\n                  id=\"search-field\"\n                  className=\"people-section__search-input\"\n                  type=\"text\"\n                  placeholder=\"Enter the name\"\n                  value={searchValue}\n                  onFocus={() => {\n                    setActiveInpute(true);\n                  }}\n                  onBlur={() => {\n                    setActiveInpute(false);\n                  }}\n                  onChange={(event) => {\n                    setSearchValue(event.target.value);\n                    applyQuery(event.target.value, searchParams);\n                  }}\n                />\n\n                <label\n                  htmlFor=\"search-field\"\n                  className=\"people-section__search-icon\"\n                />\n              </div>\n            </label>\n          </div>\n\n          <Table people={visiblePeople} selectedSlug={match.params.slug} />\n        </section>\n      );\n    },\n  ),\n);\n","export function debounce(func, delay) {\n  let timer;\n\n  return (...args) => {\n    clearTimeout(timer);\n\n    timer = setTimeout(func, delay, ...args);\n  };\n}\n","import React from 'react';\n\nimport './PageNotFound.scss';\n\nexport const PageNotFound = React.memo(\n  () => (\n    <h1 className=\"not-found\">Page not found</h1>\n  ),\n);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { PeopleTable } from './components/PeopleTable';\nimport { PageNotFound } from './components/PageNotFound';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"app\">\n\n    <header>\n      <Navigation />\n    </header>\n\n    <main className=\"app__main\">\n      <div className=\"app__content\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n\n          <Route path=\"/people/:slug?\">\n            <PeopleTable />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n\n          <PageNotFound />\n        </Switch>\n      </div>\n    </main>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}