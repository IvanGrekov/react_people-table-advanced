{"version":3,"sources":["components/Navigation/Navigation.jsx","components/HomePage/HomePage.jsx","api.js","components/PeopleTable/Father.jsx","components/PeopleTable/Mother.jsx","components/PeopleTable/TableRow.jsx","components/PeopleTable/personProps.js","components/PeopleTable/Table.jsx","components/PeopleTable/PeopleTable.jsx","scripts/debounce.js","components/PageNotFound/PageNotFound.jsx","App.jsx","index.jsx"],"names":["Navigation","React","memo","className","to","exact","activeClassName","HomePage","api","Father","fatherName","fatherSlug","defaultProps","Mother","motherName","motherSlug","TableRow","PropTypes","shape","name","string","isRequired","sex","born","number","died","slug","father","object","mother","person","selectedSlug","isEven","id","classNames","Table","people","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","sorting","get","sortOrder","handleSort","value","pathName","pathname","hash","set","delete","replace","toString","visiblePeople","sort","prevPerson","currentPerson","localeCompare","prepareSortedList","onClick","length","map","index","key","PeopleTable","withRouter","match","useState","setPeople","searchValue","setSearchValue","activeInpute","setActiveInpute","addParents","array","peopleWithParents","find","human","useEffect","options","fetch","then","response","json","getUsers","query","handleQueryChange","useCallback","applyQuery","func","delay","timer","clearTimeout","args","setTimeout","debounce","filter","lowerQuery","toLowerCase","includes","htmlFor","type","placeholder","onFocus","onBlur","onChange","event","target","params","PageNotFound","App","path","ReactDOM","render","document","getElementById"],"mappings":"sUAKaA,G,MAAaC,IAAMC,MAC9B,kBACE,yBAAKC,UAAU,cACb,wBAAIA,UAAU,oBACZ,wBAAIA,UAAU,oBACZ,kBAAC,IAAD,CACEC,GAAG,IACHC,OAAK,EACLF,UAAU,mBACVG,gBAAgB,4BAJlB,SASF,wBAAIH,UAAU,oBACZ,kBAAC,IAAD,CACEC,GAAG,UACHD,UAAU,mBACVG,gBAAgB,4BAHlB,iBChBGC,G,MAAWN,IAAMC,MAC5B,kBACE,wBAAIC,UAAU,SAAd,iB,uCCNJ,IAAMK,EAAM,oE,QCICC,EAASR,IAAMC,MAC1B,YAAiC,IAA9BQ,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACb,OAAID,GAAcC,EAEd,kBAAC,IAAD,CACEP,GAAE,kBAAaO,EAAb,YAA2BA,GAC7BR,UAAU,8BAETO,GAKHA,EAEA,0BAAMP,UAAU,qCACbO,GAML,aAUND,EAAOG,aAAe,CACpBF,WAAY,GACZC,WAAY,IClCP,IAAME,EAASZ,IAAMC,MAC1B,YAAiC,IAA9BY,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACb,OAAID,GAAcC,EAEd,kBAAC,IAAD,CACEX,GAAE,kBAAaW,EAAb,YAA2BA,GAC7BZ,UAAU,8BAETW,GAKHA,EAEA,0BAAMX,UAAU,qCACbW,GAML,aAUND,EAAOD,aAAe,CACpBE,WAAY,GACZC,WAAY,I,oBC7BDC,GCPcC,IAAUC,MAAM,CACzCC,KAAMF,IAAUG,OAAOC,WACvBC,IAAKL,IAAUG,OAAOC,WACtBE,KAAMN,IAAUO,OAAOH,WACvBI,KAAMR,IAAUO,OAChBd,WAAYO,IAAUG,OACtBN,WAAYG,IAAUG,OACtBM,KAAMT,IAAUG,OAAOC,WACvBM,OAAQV,IAAUW,OAClBC,OAAQZ,IAAUW,SDFI3B,IAAMC,MAC5B,YAAuC,IAApC4B,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAErBb,EASEW,EATFX,KACAG,EAQEQ,EARFR,IACAC,EAOEO,EAPFP,KACAE,EAMEK,EANFL,KACAf,EAKEoB,EALFpB,WACAI,EAIEgB,EAJFhB,WACAY,EAGEI,EAHFJ,KACAC,EAEEG,EAFFH,OACAE,EACEC,EADFD,OAGIlB,EAAagB,EAASA,EAAOD,KAAO,GACpCX,EAAac,EAASA,EAAOH,KAAO,GAE1C,OACE,wBACEO,GAAIP,EACJvB,UAAW+B,IACT,4BACA,CACE,kCAAmCF,EACnC,0CACED,IAAiBL,GAAgB,MAARJ,EAE3B,0CACES,IAAiBL,GAAgB,MAARJ,KAI/B,wBAAInB,UAAU,8BACZ,kBAAC,IAAD,CACEC,GAAE,kBAAasB,EAAb,YAAqBA,GACvBvB,UAAU,8BAETgB,IAGL,wBACEhB,UAAU,kEAITmB,GAEH,wBACEnB,UAAU,kEAIToB,GAEH,wBACEpB,UAAU,kEAITsB,GAEH,wBACEtB,UAAW+B,IACT,6BACA,CAAE,qCAAsCxB,KAG1C,kBAACD,EAAD,CAAQC,WAAYA,EAAYC,WAAYA,KAE9C,wBACER,UAAW+B,IACT,6BACA,CAAE,qCAAsCpB,KAG1C,kBAACD,EAAD,CAAQC,WAAYA,EAAYC,WAAYA,UE5EzCoB,EAAQlC,IAAMC,MACzB,YAA+B,IAA5BkC,EAA2B,EAA3BA,OAAQL,EAAmB,EAAnBA,aAiDHM,EAAUC,cACVC,EAAWC,cACXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CC,EAAUH,EAAaI,IAAI,WAAa,GACxCC,EAAYL,EAAaI,IAAI,cAAgB,GAE7CE,EAAa,SAACC,GAClB,IAAMC,EAAWV,EAASW,SACpBC,EAAOZ,EAASY,MAAQ,GAK9B,GAHAV,EAAaW,IAAI,SAAUJ,GAC3BP,EAAaW,IAAI,YAAa,OAE1BJ,IAAUJ,EACZ,OAAQE,GACN,IAAK,MACHL,EAAaW,IAAI,YAAa,QAC9B,MAEF,IAAK,OACHX,EAAaY,OAAO,UACpBZ,EAAaY,OAAO,aACpB,MAEF,QACEZ,EAAaW,IAAI,YAAa,OAIpC,OAAOf,EAAQiB,QAAR,UAAmBL,EAAnB,YAA+BR,EAAac,YAA5C,OAAyDJ,KAsB5DK,EAnBoB,WACxB,OAAQZ,GACN,IAAK,OACH,MAlFc,SAAdE,EACK,YAAIV,GAAQqB,MAAK,SAACC,EAAYC,GAAb,OACtBA,EAAcxC,KAAKyC,cAAcF,EAAWvC,SAIzC,YAAIiB,GAAQqB,MAAK,SAACC,EAAYC,GAAb,OACtBD,EAAWvC,KAAKyC,cAAcD,EAAcxC,SA6E5C,IAAK,MACH,MAzEc,SAAd2B,EACK,YAAIV,GAAQqB,MAAK,SAACC,EAAYC,GAAb,OACtBA,EAAcrC,IAAIsC,cAAcF,EAAWpC,QAIxC,YAAIc,GAAQqB,MAAK,SAACC,EAAYC,GAAb,OACtBD,EAAWpC,IAAIsC,cAAcD,EAAcrC,QAoE3C,IAAK,OACH,MAhEc,SAAdwB,EACK,YAAIV,GAAQqB,MAAK,SAACC,EAAYC,GAAb,OACtBA,EAAcpC,KAAOmC,EAAWnC,QAI7B,YAAIa,GAAQqB,MAAK,SAACC,EAAYC,GAAb,OACtBD,EAAWnC,KAAOoC,EAAcpC,QA2DhC,IAAK,OACH,MAvDc,SAAduB,EACK,YAAIV,GAAQqB,MAAK,SAACC,EAAYC,GAAb,OACtBA,EAAclC,KAAOiC,EAAWjC,QAI7B,YAAIW,GAAQqB,MAAK,SAACC,EAAYC,GAAb,OACtBD,EAAWjC,KAAOkC,EAAclC,QAkDhC,QACE,OAAOW,GAISyB,GAEtB,OACE,2BAAO1D,UAAU,yBACf,2BAAOA,UAAU,8BACf,wBAAIA,UAAU,kCACZ,wBACEA,UAAU,iCACV2D,QAAS,kBAAMf,EAAW,UAF5B,OAKE,0BACE5C,UAAW+B,IACT,kCACA,CACE,4CACc,SAAZU,GAAoC,QAAdE,EAExB,6CACc,SAAZF,GAAoC,SAAdE,OAKhC,wBACE3C,UAAU,iCACV2D,QAAS,kBAAMf,EAAW,SAF5B,MAKE,0BACE5C,UAAW+B,IACT,kCACA,CACE,4CACc,QAAZU,GAAmC,QAAdE,EAEvB,6CACc,QAAZF,GAAmC,SAAdE,OAK/B,wBACE3C,UAAU,iCACV2D,QAAS,kBAAMf,EAAW,UAF5B,OAKE,0BACE5C,UAAW+B,IACT,kCACA,CACE,4CACc,SAAZU,GAAoC,QAAdE,EAExB,6CACc,SAAZF,GAAoC,SAAdE,OAKhC,wBACE3C,UAAU,iCACV2D,QAAS,kBAAMf,EAAW,UAF5B,OAKE,0BACE5C,UAAW+B,IACT,kCACA,CACE,4CACc,SAAZU,GAAoC,QAAdE,EAExB,6CACc,SAAZF,GAAoC,SAAdE,OAKhC,wBAAI3C,UAAU,kCAAd,UAGA,wBAAIA,UAAU,kCAAd,YAMJ,2BAAOA,UAAU,8BACW,IAAzBqD,EAAcO,QAAgBP,EAAcQ,KAAI,SAAClC,EAAQmC,GAAT,OAC/C,kBAACjD,EAAD,CACEkD,IAAKpC,EAAOJ,KACZI,OAAQA,EACRC,aAAcA,GAAgB,eAC9BC,OAASiC,EAAQ,IAAO,YAgBtC9B,EAAMvB,aAAe,CACnBwB,OAAQ,GACRL,aAAc,I,UC9MHoC,EAAclE,IAAMC,KAC/BkE,aACE,YAAgB,IAAbC,EAAY,EAAZA,MACD,EAA4BC,mBAAS,IAArC,mBAAOlC,EAAP,KAAemC,EAAf,KACA,EAAsCD,mBAAS,MAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAOA,SAASC,EAAWC,GAClB,IAAMC,EAAoB,YAAID,GAAOb,KAAI,SAAClC,GACxC,IAAMH,EAASkD,EAAME,MAAK,SAAAC,GAAK,OAAIA,EAAM7D,OAASW,EAAOpB,cACnDmB,EAASgD,EAAME,MAAK,SAAAC,GAAK,OAAIA,EAAM7D,OAASW,EAAOhB,cAEzD,OAAO,2BACFgB,GADL,IAEEH,SACAE,cAIJ0C,EAAUO,GAjBZG,qBAAU,YNnBQ,eAACC,EAAD,uDAAW,GAAX,OACtBC,MAAM3E,EAAK0E,GACRE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WMkBvBC,GACGH,KAAKR,KACP,IAiBH,IAAMvC,EAAUC,cACVC,EAAWC,cACXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5C6C,EAAQ/C,EAAaI,IAAI,UAAY,GAEvB,OAAhB2B,GACFC,EAAee,GAGjB,IAAMC,EAAoBC,uBACxB,SAAC1C,GACC,IAAMC,EAAWV,EAASW,SACpBC,EAAOZ,EAASY,MAAQ,GAQ9B,OANAV,EAAaW,IAAI,QAASJ,GAEZ,KAAVA,GACFP,EAAaY,OAAO,SAGfhB,EAAQiB,QAAR,UACFL,EADE,YACUR,EAAac,YADvB,OACoCJ,MAG7C,CAACZ,EAAUE,EAAcJ,IAGrBsD,EAAaD,sBCpElB,SAAkBE,EAAMC,GAC7B,IAAIC,EAEJ,OAAO,WACLC,aAAaD,GADK,2BAATE,EAAS,yBAATA,EAAS,gBAGlBF,EAAQG,WAAU,WAAV,GAAWL,EAAMC,GAAjB,OAA2BG,KD+D/BE,CAAST,EAzDQ,KA0DjB,CA1DiB,MA6DbjC,EAAgBpB,EAAO+D,QAAO,SAACrE,GAAY,IAAD,IACxCsE,EAAaZ,EAAMa,cAEzB,OAAOvE,EAAOX,KAAKkF,cAAcC,SAASF,KAAnC,UACFtE,EAAOpB,kBADL,aACF,EAAmB2F,cAAcC,SAASF,MADxC,UAEFtE,EAAOhB,kBAFL,aAEF,EAAmBuF,cAAcC,SAASF,OAGjD,OACE,6BAASjG,UAAU,kBACjB,wBAAIA,UAAU,yBAAd,gBAIA,yBAAKA,UAAU,0BACb,2BACEoG,QAAQ,eACRpG,UAAU,gCAEV,0BAAMA,UAAU,qCAAhB,mBAIA,yBACEA,UAAW+B,IACT,uCACA,CACE,+CACEwC,KAIN,2BACEzC,GAAG,eACH9B,UAAU,+BACVqG,KAAK,OACLC,YAAY,iBACZzD,MAAOwB,EACPkC,QAAS,WACP/B,GAAgB,IAElBgC,OAAQ,WACNhC,GAAgB,IAElBiC,SAAU,SAACC,GACTpC,EAAeoC,EAAMC,OAAO9D,OAC5B2C,EAAWkB,EAAMC,OAAO9D,UAI5B,2BACEuD,QAAQ,eACRpG,UAAU,mCAMlB,kBAACgC,EAAD,CAAOC,OAAQoB,EAAezB,aAAcsC,EAAM0C,OAAOrF,YE/HtDsF,G,MAAe/G,IAAMC,MAChC,kBACE,wBAAIC,UAAU,aAAd,sBC+BW8G,G,MA3BH,kBACV,yBAAK9G,UAAU,OAEb,gCACE,kBAAC,EAAD,OAGF,0BAAMA,UAAU,aACd,yBAAKA,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+G,KAAK,IAAI7G,OAAK,GACnB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAO6G,KAAK,kBACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAUA,KAAK,QAAQ9G,GAAG,MAE1B,kBAAC,EAAD,YCxBV+G,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c3fd73ba.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Navigation.scss';\n\nexport const Navigation = React.memo(\n  () => (\n    <nav className=\"navigation\">\n      <ul className=\"navigation__list\">\n        <li className=\"navigation__item\">\n          <NavLink\n            to=\"/\"\n            exact\n            className=\"navigation__link\"\n            activeClassName=\"navigation__link--active\"\n          >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"navigation__item\">\n          <NavLink\n            to=\"/people\"\n            className=\"navigation__link\"\n            activeClassName=\"navigation__link--active\"\n          >\n            People\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  ),\n);\n","import React from 'react';\n\nimport './HomePage.scss';\n\nexport const HomePage = React.memo(\n  () => (\n    <h1 className=\"title\">Home Page</h1>\n  ),\n);\n","const api = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getUsers = (options = {}) => (\n  fetch(api, options)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport PropTypes from 'prop-types';\n\nexport const Father = React.memo(\n  ({ fatherName, fatherSlug }) => {\n    if (fatherName && fatherSlug) {\n      return (\n        <Link\n          to={`/people/${fatherSlug}#${fatherSlug}`}\n          className=\"people-section__table-link\"\n        >\n          {fatherName}\n        </Link>\n      );\n    }\n\n    if (fatherName) {\n      return (\n        <span className=\"people-section__table-lost-father\">\n          {fatherName}\n        </span>\n      );\n    }\n\n    return (\n      'unknown'\n    );\n  },\n);\n\nFather.propTypes = {\n  fatherName: PropTypes.string,\n  fatherSlug: PropTypes.string,\n};\n\nFather.defaultProps = {\n  fatherName: '',\n  fatherSlug: '',\n};\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport PropTypes from 'prop-types';\n\nexport const Mother = React.memo(\n  ({ motherName, motherSlug }) => {\n    if (motherName && motherSlug) {\n      return (\n        <Link\n          to={`/people/${motherSlug}#${motherSlug}`}\n          className=\"people-section__table-link\"\n        >\n          {motherName}\n        </Link>\n      );\n    }\n\n    if (motherName) {\n      return (\n        <span className=\"people-section__table-lost-mother\">\n          {motherName}\n        </span>\n      );\n    }\n\n    return (\n      'unknown'\n    );\n  },\n);\n\nMother.propTypes = {\n  motherName: PropTypes.string,\n  motherSlug: PropTypes.string,\n};\n\nMother.defaultProps = {\n  motherName: '',\n  motherSlug: '',\n};\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Father } from './Father';\nimport { Mother } from './Mother';\nimport { personProps } from './personProps';\n\nexport const TableRow = React.memo(\n  ({ person, selectedSlug, isEven }) => {\n    const {\n      name,\n      sex,\n      born,\n      died,\n      fatherName,\n      motherName,\n      slug,\n      father,\n      mother,\n    } = person;\n\n    const fatherSlug = father ? father.slug : '';\n    const motherSlug = mother ? mother.slug : '';\n\n    return (\n      <tr\n        id={slug}\n        className={classNames(\n          'people-section__table-row',\n          {\n            'people-section__table-row--even': isEven,\n            'people-section__table-row--highlight--m':\n              selectedSlug === slug && sex === 'm',\n\n            'people-section__table-row--highlight--f':\n              selectedSlug === slug && sex === 'f',\n          },\n        )}\n      >\n        <td className=\"people-section__table-cell\">\n          <Link\n            to={`/people/${slug}#${slug}`}\n            className=\"people-section__table-link\"\n          >\n            {name}\n          </Link>\n        </td>\n        <td\n          className=\"\n            people-section__table-cell\n            people-section__table-cell--align\n       \">\n          {sex}\n        </td>\n        <td\n          className=\"\n            people-section__table-cell\n            people-section__table-cell--align\n       \">\n          {born}\n        </td>\n        <td\n          className=\"\n            people-section__table-cell\n            people-section__table-cell--align\n       \">\n          {died}\n        </td>\n        <td\n          className={classNames(\n            'people-section__table-cell',\n            { 'people-section__table-cell--error': !fatherName },\n          )}\n        >\n          <Father fatherName={fatherName} fatherSlug={fatherSlug} />\n        </td>\n        <td\n          className={classNames(\n            'people-section__table-cell',\n            { 'people-section__table-cell--error': !motherName },\n          )}\n        >\n          <Mother motherName={motherName} motherSlug={motherSlug} />\n        </td>\n      </tr>\n    );\n  },\n);\n\nTableRow.propTypes = {\n  person: personProps.isRequired,\n  selectedSlug: PropTypes.string.isRequired,\n  isEven: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const personProps = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number,\n  fatherName: PropTypes.string,\n  motherName: PropTypes.string,\n  slug: PropTypes.string.isRequired,\n  father: PropTypes.object,\n  mother: PropTypes.object,\n});\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { TableRow } from './TableRow';\nimport { personProps } from './personProps';\n\nexport const Table = React.memo(\n  ({ people, selectedSlug }) => {\n    const sortByName = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.name.localeCompare(prevPerson.name)\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.name.localeCompare(currentPerson.name)\n      ));\n    };\n\n    const sortBySex = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.sex.localeCompare(prevPerson.sex)\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.sex.localeCompare(currentPerson.sex)\n      ));\n    };\n\n    const sortByBorn = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.born - prevPerson.born\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.born - currentPerson.born\n      ));\n    };\n\n    const sortByDied = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.died - prevPerson.died\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.died - currentPerson.died\n      ));\n    };\n\n    const history = useHistory();\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const sorting = searchParams.get('sortBy') || '';\n    const sortOrder = searchParams.get('sortOrder') || '';\n\n    const handleSort = (value) => {\n      const pathName = location.pathname;\n      const hash = location.hash || '';\n\n      searchParams.set('sortBy', value);\n      searchParams.set('sortOrder', 'asc');\n\n      if (value === sorting) {\n        switch (sortOrder) {\n          case 'asc':\n            searchParams.set('sortOrder', 'desc');\n            break;\n\n          case 'desc':\n            searchParams.delete('sortBy');\n            searchParams.delete('sortOrder');\n            break;\n\n          default:\n            searchParams.set('sortOrder', 'asc');\n        }\n      }\n\n      return history.replace(`${pathName}?${searchParams.toString()}${hash}`);\n    };\n\n    const prepareSortedList = () => {\n      switch (sorting) {\n        case 'name':\n          return sortByName();\n\n        case 'sex':\n          return sortBySex();\n\n        case 'born':\n          return sortByBorn();\n\n        case 'died':\n          return sortByDied();\n\n        default:\n          return people;\n      }\n    };\n\n    const visiblePeople = prepareSortedList();\n\n    return (\n      <table className=\"people-section__table\">\n        <thead className=\"people-section__table-head\">\n          <tr className=\"people-section__table-head-row\">\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('name')}\n            >\n              Name\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'name' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'name' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('sex')}\n            >\n              Sex\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'sex' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'sex' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('born')}\n            >\n              Born\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'born' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'born' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('died')}\n            >\n              Died\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'died' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'died' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th className=\"people-section__table-subtitle\">\n              Father\n            </th>\n            <th className=\"people-section__table-subtitle\">\n              Mother\n            </th>\n          </tr>\n        </thead>\n\n        <tbody className=\"people-section__table-body\">\n          {visiblePeople.length !== 0 && visiblePeople.map((person, index) => (\n            <TableRow\n              key={person.slug}\n              person={person}\n              selectedSlug={selectedSlug || 'not assigned'}\n              isEven={(index % 2) === 0}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n\nTable.propTypes = {\n  people: PropTypes.arrayOf(\n    personProps,\n  ),\n  selectedSlug: PropTypes.string,\n};\n\nTable.defaultProps = {\n  people: [],\n  selectedSlug: '',\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { debounce } from '../../scripts/debounce';\nimport { getUsers } from '../../api';\nimport { Table } from './Table';\n\nimport './PeopleTable.scss';\n\nconst searchQueryDelay = 500;\n\nexport const PeopleTable = React.memo(\n  withRouter(\n    ({ match }) => {\n      const [people, setPeople] = useState([]);\n      const [searchValue, setSearchValue] = useState(null);\n      const [activeInpute, setActiveInpute] = useState(false);\n\n      useEffect(() => {\n        getUsers()\n          .then(addParents);\n      }, []);\n\n      function addParents(array) {\n        const peopleWithParents = [...array].map((person) => {\n          const father = array.find(human => human.name === person.fatherName);\n          const mother = array.find(human => human.name === person.motherName);\n\n          return {\n            ...person,\n            father,\n            mother,\n          };\n        });\n\n        setPeople(peopleWithParents);\n      }\n\n      const history = useHistory();\n      const location = useLocation();\n      const searchParams = new URLSearchParams(location.search);\n      const query = searchParams.get('query') || '';\n\n      if (searchValue === null) {\n        setSearchValue(query);\n      }\n\n      const handleQueryChange = useCallback(\n        (value) => {\n          const pathName = location.pathname;\n          const hash = location.hash || '';\n\n          searchParams.set('query', value);\n\n          if (value === '') {\n            searchParams.delete('query');\n          }\n\n          return history.replace(\n            `${pathName}?${searchParams.toString()}${hash}`,\n          );\n        },\n        [location, searchParams, history],\n      );\n\n      const applyQuery = useCallback(\n        debounce(handleQueryChange, searchQueryDelay),\n        [searchQueryDelay],\n      );\n\n      const visiblePeople = people.filter((person) => {\n        const lowerQuery = query.toLowerCase();\n\n        return person.name.toLowerCase().includes(lowerQuery)\n          || person.fatherName?.toLowerCase().includes(lowerQuery)\n          || person.motherName?.toLowerCase().includes(lowerQuery);\n      });\n\n      return (\n        <section className=\"people-section\">\n          <h2 className=\"people-section__title\">\n            People table\n          </h2>\n\n          <div className=\"people-section__search\">\n            <label\n              htmlFor=\"search-field\"\n              className=\"people-section__search-label\"\n            >\n              <span className=\"people-section__search-label-text\">\n                Find the person\n              </span>\n\n              <div\n                className={classNames(\n                  'people-section__search-input-wrapper',\n                  {\n                    'people-section__search-input-wrapper--active':\n                      activeInpute,\n                  },\n                )}\n              >\n                <input\n                  id=\"search-field\"\n                  className=\"people-section__search-input\"\n                  type=\"text\"\n                  placeholder=\"Enter the name\"\n                  value={searchValue}\n                  onFocus={() => {\n                    setActiveInpute(true);\n                  }}\n                  onBlur={() => {\n                    setActiveInpute(false);\n                  }}\n                  onChange={(event) => {\n                    setSearchValue(event.target.value);\n                    applyQuery(event.target.value);\n                  }}\n                />\n\n                <label\n                  htmlFor=\"search-field\"\n                  className=\"people-section__search-icon\"\n                />\n              </div>\n            </label>\n          </div>\n\n          <Table people={visiblePeople} selectedSlug={match.params.slug} />\n        </section>\n      );\n    },\n  ),\n);\n","export function debounce(func, delay) {\n  let timer;\n\n  return (...args) => {\n    clearTimeout(timer);\n\n    timer = setTimeout(func, delay, ...args);\n  };\n}\n","import React from 'react';\n\nimport './PageNotFound.scss';\n\nexport const PageNotFound = React.memo(\n  () => (\n    <h1 className=\"not-found\">Page not found</h1>\n  ),\n);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { PeopleTable } from './components/PeopleTable';\nimport { PageNotFound } from './components/PageNotFound';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"app\">\n\n    <header>\n      <Navigation />\n    </header>\n\n    <main className=\"app__main\">\n      <div className=\"app__content\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n\n          <Route path=\"/people/:slug?\">\n            <PeopleTable />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n\n          <PageNotFound />\n        </Switch>\n      </div>\n    </main>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}