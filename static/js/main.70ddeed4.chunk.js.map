{"version":3,"sources":["components/Navigation/Navigation.jsx","components/HomePage/HomePage.jsx","api.js","components/PeopleTable/Father.jsx","components/PeopleTable/Mother.jsx","components/PeopleTable/TableRow.jsx","components/PeopleTable/personProps.js","components/PeopleTable/Table.jsx","components/PeopleTable/PeopleTable.jsx","scripts/debounce.js","components/PageNotFound/PageNotFound.jsx","App.jsx","index.jsx"],"names":["Navigation","React","memo","className","to","exact","activeClassName","HomePage","api","Father","fatherName","fatherSlug","search","useLocation","defaultProps","Mother","motherName","motherSlug","TableRow","PropTypes","shape","name","string","isRequired","sex","born","number","died","slug","father","object","mother","person","selectedSlug","isEven","id","classNames","Table","array","people","history","useHistory","location","searchParams","URLSearchParams","sorting","get","sortOrder","handleSort","value","set","delete","push","toString","visiblePeople","sort","prevPerson","currentPerson","localeCompare","prepareSortedList","map","find","human","onClick","length","index","key","PeopleTable","withRouter","match","query","useState","setPeople","searchValue","setSearchValue","activeInpute","setActiveInpute","useEffect","options","fetch","then","response","json","getUsers","applyQuery","useCallback","func","delay","timer","clearTimeout","args","setTimeout","debounce","params","filter","lowerQuery","toLowerCase","includes","htmlFor","type","placeholder","onFocus","onBlur","onChange","event","target","PageNotFound","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70ddeed4.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Navigation.scss';\n\nexport const Navigation = React.memo(\n  () => (\n    <nav className=\"navigation\">\n      <ul className=\"navigation__list\">\n        <li className=\"navigation__item\">\n          <NavLink\n            to=\"/\"\n            exact\n            className=\"navigation__link\"\n            activeClassName=\"navigation__link--active\"\n          >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"navigation__item\">\n          <NavLink\n            to=\"/people\"\n            className=\"navigation__link\"\n            activeClassName=\"navigation__link--active\"\n          >\n            People\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  ),\n);\n","import React from 'react';\n\nimport './HomePage.scss';\n\nexport const HomePage = React.memo(\n  () => (\n    <h1 className=\"title\">Home Page</h1>\n  ),\n);\n","const api = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getUsers = (options = {}) => (\n  fetch(api, options)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const Father = React.memo(\n  ({ fatherName, fatherSlug }) => {\n    const { search } = useLocation();\n\n    if (fatherName && fatherSlug) {\n      return (\n        <Link\n          to={`/people/${fatherSlug}${search}#${fatherSlug}`}\n          className=\"people-section__table-link\"\n        >\n          {fatherName}\n        </Link>\n      );\n    }\n\n    if (fatherName) {\n      return (\n        <span className=\"people-section__table-lost-father\">\n          {fatherName}\n        </span>\n      );\n    }\n\n    return (\n      'unknown'\n    );\n  },\n);\n\nFather.propTypes = {\n  fatherName: PropTypes.string,\n  fatherSlug: PropTypes.string,\n};\n\nFather.defaultProps = {\n  fatherName: '',\n  fatherSlug: '',\n};\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const Mother = React.memo(\n  ({ motherName, motherSlug }) => {\n    const { search } = useLocation();\n\n    if (motherName && motherSlug) {\n      return (\n        <Link\n          to={`/people/${motherSlug}${search}#${motherSlug}`}\n          className=\"people-section__table-link\"\n        >\n          {motherName}\n        </Link>\n      );\n    }\n\n    if (motherName) {\n      return (\n        <span className=\"people-section__table-lost-mother\">\n          {motherName}\n        </span>\n      );\n    }\n\n    return (\n      'unknown'\n    );\n  },\n);\n\nMother.propTypes = {\n  motherName: PropTypes.string,\n  motherSlug: PropTypes.string,\n};\n\nMother.defaultProps = {\n  motherName: '',\n  motherSlug: '',\n};\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Father } from './Father';\nimport { Mother } from './Mother';\nimport { personProps } from './personProps';\n\nexport const TableRow = React.memo(\n  ({ person, selectedSlug, isEven }) => {\n    const {\n      name,\n      sex,\n      born,\n      died,\n      fatherName,\n      motherName,\n      slug,\n      father,\n      mother,\n    } = person;\n\n    const fatherSlug = father ? father.slug : '';\n    const motherSlug = mother ? mother.slug : '';\n\n    const { search } = useLocation();\n\n    return (\n      <tr\n        id={slug}\n        className={classNames(\n          'people-section__table-row',\n          {\n            'people-section__table-row--even': isEven,\n            'people-section__table-row--highlight--m':\n              selectedSlug === slug && sex === 'm',\n\n            'people-section__table-row--highlight--f':\n              selectedSlug === slug && sex === 'f',\n          },\n        )}\n      >\n        <td className=\"people-section__table-cell\">\n          <Link\n            to={`/people/${slug}${search}#${slug}`}\n            className=\"people-section__table-link\"\n          >\n            {name}\n          </Link>\n        </td>\n        <td\n          className=\"\n            people-section__table-cell\n            people-section__table-cell--align\n       \">\n          {sex}\n        </td>\n        <td\n          className=\"\n            people-section__table-cell\n            people-section__table-cell--align\n       \">\n          {born}\n        </td>\n        <td\n          className=\"\n            people-section__table-cell\n            people-section__table-cell--align\n       \">\n          {died}\n        </td>\n        <td\n          className={classNames(\n            'people-section__table-cell',\n            { 'people-section__table-cell--error': !fatherName },\n          )}\n        >\n          <Father fatherName={fatherName} fatherSlug={fatherSlug} />\n        </td>\n        <td\n          className={classNames(\n            'people-section__table-cell',\n            { 'people-section__table-cell--error': !motherName },\n          )}\n        >\n          <Mother motherName={motherName} motherSlug={motherSlug} />\n        </td>\n      </tr>\n    );\n  },\n);\n\nTableRow.propTypes = {\n  person: personProps.isRequired,\n  selectedSlug: PropTypes.string.isRequired,\n  isEven: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const personProps = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number,\n  fatherName: PropTypes.string,\n  motherName: PropTypes.string,\n  slug: PropTypes.string.isRequired,\n  father: PropTypes.object,\n  mother: PropTypes.object,\n});\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { TableRow } from './TableRow';\nimport { personProps } from './personProps';\n\nexport const Table = React.memo(\n  ({ people, selectedSlug }) => {\n    const sortByName = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.name.localeCompare(prevPerson.name)\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.name.localeCompare(currentPerson.name)\n      ));\n    };\n\n    const sortBySex = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.sex.localeCompare(prevPerson.sex)\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.sex.localeCompare(currentPerson.sex)\n      ));\n    };\n\n    const sortByBorn = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.born - prevPerson.born\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.born - currentPerson.born\n      ));\n    };\n\n    const sortByDied = () => {\n      if (sortOrder === 'desc') {\n        return [...people].sort((prevPerson, currentPerson) => (\n          currentPerson.died - prevPerson.died\n        ));\n      }\n\n      return [...people].sort((prevPerson, currentPerson) => (\n        prevPerson.died - currentPerson.died\n      ));\n    };\n\n    const addParents = array => (\n      [...array].map((person) => {\n        const father = array.find(human => human.name === person.fatherName);\n        const mother = array.find(human => human.name === person.motherName);\n\n        return {\n          ...person,\n          father,\n          mother,\n        };\n      })\n    );\n\n    const history = useHistory();\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const sorting = searchParams.get('sortBy') || '';\n    const sortOrder = searchParams.get('sortOrder') || '';\n\n    const handleSort = (value) => {\n      searchParams.set('sortBy', value);\n      searchParams.set('sortOrder', 'asc');\n\n      if (value === sorting) {\n        switch (sortOrder) {\n          case 'asc':\n            searchParams.set('sortOrder', 'desc');\n            break;\n\n          case 'desc':\n            searchParams.delete('sortBy');\n            searchParams.delete('sortOrder');\n            break;\n\n          default:\n            searchParams.set('sortOrder', 'asc');\n        }\n      }\n\n      return history.push({ search: `${searchParams.toString()}` });\n    };\n\n    const prepareSortedList = () => {\n      switch (sorting) {\n        case 'name':\n          return sortByName();\n\n        case 'sex':\n          return sortBySex();\n\n        case 'born':\n          return sortByBorn();\n\n        case 'died':\n          return sortByDied();\n\n        default:\n          return people;\n      }\n    };\n\n    const visiblePeople = addParents(prepareSortedList());\n\n    return (\n      <table className=\"people-section__table\">\n        <thead className=\"people-section__table-head\">\n          <tr className=\"people-section__table-head-row\">\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('name')}\n            >\n              Name\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'name' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'name' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('sex')}\n            >\n              Sex\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'sex' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'sex' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('born')}\n            >\n              Born\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'born' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'born' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th\n              className=\"people-section__table-subtitle\"\n              onClick={() => handleSort('died')}\n            >\n              Died\n              <span\n                className={classNames(\n                  'people-section__table-sort-icon',\n                  {\n                    'people-section__table-sort-icon--asc-sort':\n                      sorting === 'died' && sortOrder === 'asc',\n\n                    'people-section__table-sort-icon--desc-sort':\n                      sorting === 'died' && sortOrder === 'desc',\n                  },\n                )}\n              />\n            </th>\n            <th className=\"people-section__table-subtitle\">\n              Father\n            </th>\n            <th className=\"people-section__table-subtitle\">\n              Mother\n            </th>\n          </tr>\n        </thead>\n\n        <tbody className=\"people-section__table-body\">\n          {visiblePeople.length !== 0 && visiblePeople.map((person, index) => (\n            <TableRow\n              key={person.slug}\n              person={person}\n              selectedSlug={selectedSlug || 'not assigned'}\n              isEven={(index % 2) === 0}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n\nTable.propTypes = {\n  people: PropTypes.arrayOf(\n    personProps,\n  ),\n  selectedSlug: PropTypes.string,\n};\n\nTable.defaultProps = {\n  people: [],\n  selectedSlug: '',\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { debounce } from '../../scripts/debounce';\nimport { getUsers } from '../../api';\nimport { Table } from './Table';\n\nimport './PeopleTable.scss';\n\nconst searchQueryDelay = 500;\n\nexport const PeopleTable = React.memo(\n  withRouter(\n    ({ match }) => {\n      const history = useHistory();\n      const location = useLocation();\n      const searchParams = new URLSearchParams(location.search);\n      const query = searchParams.get('query') || '';\n\n      const [people, setPeople] = useState([]);\n      const [searchValue, setSearchValue] = useState(query);\n      const [activeInpute, setActiveInpute] = useState(false);\n\n      useEffect(() => {\n        getUsers()\n          .then(setPeople);\n      }, []);\n\n      const handleQueryChange = (value, params) => {\n        params.set('query', value);\n\n        if (value === '') {\n          params.delete('query');\n        }\n\n        return history.push({ search: `${params.toString()}` });\n      };\n\n      const applyQuery = useCallback(\n        debounce(handleQueryChange, searchQueryDelay),\n        [searchQueryDelay],\n      );\n\n      const visiblePeople = people.filter((person) => {\n        const lowerQuery = query.toLowerCase();\n\n        return person.name.toLowerCase().includes(lowerQuery)\n          || person.fatherName?.toLowerCase().includes(lowerQuery)\n          || person.motherName?.toLowerCase().includes(lowerQuery);\n      });\n\n      return (\n        <section className=\"people-section\">\n          <h2 className=\"people-section__title\">\n            People table\n          </h2>\n\n          <div className=\"people-section__search\">\n            <label\n              htmlFor=\"search-field\"\n              className=\"people-section__search-label\"\n            >\n              <span className=\"people-section__search-label-text\">\n                Find the person\n              </span>\n\n              <div\n                className={classNames(\n                  'people-section__search-input-wrapper',\n                  {\n                    'people-section__search-input-wrapper--active':\n                      activeInpute,\n                  },\n                )}\n              >\n                <input\n                  id=\"search-field\"\n                  className=\"people-section__search-input\"\n                  type=\"text\"\n                  placeholder=\"Enter the name\"\n                  value={searchValue}\n                  onFocus={() => {\n                    setActiveInpute(true);\n                  }}\n                  onBlur={() => {\n                    setActiveInpute(false);\n                  }}\n                  onChange={(event) => {\n                    setSearchValue(event.target.value);\n                    applyQuery(event.target.value, searchParams);\n                  }}\n                />\n\n                <label\n                  htmlFor=\"search-field\"\n                  className=\"people-section__search-icon\"\n                />\n              </div>\n            </label>\n          </div>\n\n          <Table people={visiblePeople} selectedSlug={match.params.slug} />\n        </section>\n      );\n    },\n  ),\n);\n","export function debounce(func, delay) {\n  let timer;\n\n  return (...args) => {\n    clearTimeout(timer);\n\n    timer = setTimeout(func, delay, ...args);\n  };\n}\n","import React from 'react';\n\nimport './PageNotFound.scss';\n\nexport const PageNotFound = React.memo(\n  () => (\n    <h1 className=\"not-found\">Page not found</h1>\n  ),\n);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { PeopleTable } from './components/PeopleTable';\nimport { PageNotFound } from './components/PageNotFound';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"app\">\n\n    <header>\n      <Navigation />\n    </header>\n\n    <main className=\"app__main\">\n      <div className=\"app__content\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n\n          <Route path=\"/people/:slug?\">\n            <PeopleTable />\n          </Route>\n\n          <Redirect path=\"/home\" to=\"/\" />\n\n          <PageNotFound />\n        </Switch>\n      </div>\n    </main>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}